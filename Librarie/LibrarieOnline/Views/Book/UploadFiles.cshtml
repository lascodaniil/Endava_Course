@model LibrarieOnline.Model.DTO.BookViewModel

@{
    ViewBag.Title = "UploadFiles";
}

<h2>UploadFiles</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Book</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" id="Title" class="form-control" />
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" id="Price" class="form-control" />

                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @{
                var categories = new List<SelectListItem>();
                foreach (var item in Model.category)
                {
                    categories.Add(new SelectListItem() { Text = item.Name, Value = item.CategoryId.ToString() });
                }
            }

            @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
            <br />
            @Html.DropDownList("CategoryDropDown", categories, htmlAttributes: new { @class = "form-control" })
            <br />
        </div>

        <div class="form-group">
            @{
                var author = new List<SelectListItem>();
                foreach (var item in Model.author)
                {
                    author.Add(new SelectListItem() { Text = item.Name, Value = item.AuthorId.ToString() });
                }
            }

            @Html.LabelFor(model => model.AuthorId, "AuthorId", htmlAttributes: new { @class = "control-label col-md-2" })
            <br />
            @Html.DropDownList("AuthorDropDown", author, htmlAttributes: new { @class = "form-control" })
            <br />
        </div>

        <div class="form-group">
            @{
                var publisher = new List<SelectListItem>();
                foreach (var item in Model.publisher)
                {
                    publisher.Add(new SelectListItem() { Text = item.Name, Value = item.PublisherId.ToString() });
                }
            }

            @Html.LabelFor(model => model.PublisherId, "PublisherId", htmlAttributes: new { @class = "control-label col-md-2" })
            <br />
            @Html.DropDownList("PublisherDropDown", publisher, htmlAttributes: new { @class = "form-control" })
            <br />
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" id="Description" class="form-control" />
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" class="form-control" id="image">
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="UploadBtn" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script>
        $('#UploadBtn').click(function () {           
            var formData = new FormData();
            formData.append($("#image").get(0).files[0].name, $("#image").get(0).files[0]);
            formData.append("DropDownAuthorId", $('[name="AuthorDropDown"]').val());
            formData.append("DropDownPublisherId", $('[name="PublisherDropDown"]').val());
            formData.append("DropDownCategoryId", $('[name="CategoryDropDown"]').val());
            formData.append("Title", $('#Title').val());
            formData.append("Description", $('#Description').val());
            formData.append("Price", $('#Price').val());

            $.ajax({
                url: '@Url.Action("UploadFiless", "Book")',
                type: "POST",
                contentType: false,
                processData: false,
                data: formData,
                async: false,
                success: function () {                    
                    alert("succes");                    
                },
                error: function () {
                    alert("ERROR");
                }
            });

        });
</script>